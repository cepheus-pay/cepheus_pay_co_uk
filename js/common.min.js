document.addEventListener('DOMContentLoaded', function () {
  //header section

  const header = document.querySelector('.header');
  let scrollPrev = 0;
  window.addEventListener('scroll', function () {
    let scrolled = window.scrollY;

    if (scrolled > 10 && scrolled > scrollPrev) {
      header.classList.add('hidden');
    } else {
      header.classList.remove('hidden');
    }

    scrollPrev = scrolled;
  });

  if (window.pageYOffset > 0) {
    header.classList.add('header--active');
  }

  (function () {
    const header = document.querySelector('.header');
    window.onscroll = () => {
      if (window.pageYOffset > 0) {
        header.classList.add('header--active');
      } else {
        header.classList.remove('header--active');
      }
    };
  })();

  const headerWrapper = document.querySelector('.header__wrapper');
  const heroButtons = document.querySelectorAll('.hero__button-wrapper');

  let headerObserver = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (!entry.isIntersecting) {
          headerWrapper.classList.add('active');
        } else {
          headerWrapper.classList.remove('active');
        }
      });
    },
    {
      threshold: 1,
    },
  );

  heroButtons.forEach((item) => headerObserver.observe(item));

  // hero animation
  const heroWrapper = document.querySelectorAll('.hero__wrapper');
  const heroPersons = document.querySelectorAll('.hero__person');
  const dots = document.querySelectorAll('.hero__dot');
  const masks = document.querySelectorAll('.mask');
  const runningLine = document.querySelectorAll('.running');

  let heroObserver = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          heroPersons.forEach((person) => {
            person.classList.add('active');
            person.addEventListener('transitionend', () => {
              masks.forEach((mask) => {
                mask.classList.add('active');
                mask.addEventListener('animationend', () => {
                  mask.classList.remove('active');
                  runningLine.forEach((line) => {
                    line.classList.add('active');
                    dots.forEach((dot) => dot.classList.add('active'));
                  });
                });
              });
            });
          });
        }
      });
    },
    {
      threshold: 0.4,
    },
  );

  heroWrapper.forEach((item) => heroObserver.observe(item));

  //start page logic

  let startItems = document.querySelectorAll('.news__item.hidden');

  let startButton = document.querySelector('.news__button');

  if (startButton) {
    startButton.addEventListener('click', function () {
      startItems.forEach((item) => {
        item.classList.remove('hidden');
      });
      this.style.display = 'none';
    });
  }

  // main page what section exchange logic

  function toFixed(num, fixed) {
    let re = new RegExp('^-?\\d+(?:.\\d{0,' + (fixed || -1) + '})?');
    return num.toString().match(re)[0];
  }

  let firstCurrency = document.querySelector('.second__top .second__currency');
  let firstDropdownItems = document.querySelectorAll('.second__top .second__dropdown-abs-item');
  let secondCurrency = document.querySelector('.second__bottom .second__currency');
  let secondDropdownItems = document.querySelectorAll('.second__bottom .second__dropdown-abs-item');
  let firstImages = document.querySelectorAll('.second__top .second__flag img');
  let secondImages = document.querySelectorAll('.second__bottom .second__flag img');
  let secondDropdowns = document.querySelectorAll('.second__dropdown');
  let thirdDropdowns = document.querySelectorAll('.third__dropdown');
  const firstInput = document.getElementById('input-first');
  const secondInput = document.getElementById('input-second');

  secondDropdowns.forEach(function (dropdown) {
    dropdown.addEventListener('mouseenter', function () {
      this.classList.add('mouse-enter');
    });
    dropdown.addEventListener('mouseleave', function () {
      this.classList.remove('mouse-enter');
    });
    const dropdownItems = dropdown.querySelectorAll('.second__dropdown-abs-item');
    dropdownItems.forEach(function (item) {
      item.addEventListener('click', function (event) {
        dropdown.classList.remove('mouse-enter');
      });
    });
  });
  thirdDropdowns.forEach((dropdown) => {
    dropdown.addEventListener('mouseenter', function () {
      this.classList.add('mouse-enter');
    });
    dropdown.addEventListener('mouseleave', function () {
      this.classList.remove('mouse-enter');
    });
    const dropdownItems = dropdown.querySelectorAll('.third__dropdown-abs-item');
    dropdownItems.forEach(function (item) {
      item.addEventListener('click', function (event) {
        dropdown.classList.remove('mouse-enter');
      });
    });
  });

  const rates = {
    CAD: 27.44,
    GBP: 45.74,
    EUR: 39.4,
    KZT: 0.082,
    USD: 36.65,
  };

  if (firstCurrency) {
    firstCurrency.textContent = 'EUR';
    secondCurrency.textContent = 'GBP';
    secondInput.value = toFixed(
      (+firstInput.value * rates[firstCurrency.textContent]) / rates[secondCurrency.textContent],
      2,
    );

    firstDropdownItems.forEach((button) => {
      button.addEventListener('click', function () {
        firstCurrency.textContent = this.dataset.currencyTitle;
        secondInput.value = toFixed(
          (secondInput.value = +firstInput.value * rates[firstCurrency.textContent]) /
            rates[secondCurrency.textContent],
          2,
        );

        firstImages.forEach((image) => {
          if (image.dataset.flag === this.dataset.currencyTitle) {
            image.classList.add('active');
          } else {
            image.classList.remove('active');
          }
        });
      });
    });
    secondDropdownItems.forEach((button) => {
      button.addEventListener('click', function () {
        secondCurrency.textContent = this.dataset.currencyTitle;

        firstInput.value = toFixed(
          (firstInput.value = +secondInput.value * rates[secondCurrency.textContent]) /
            rates[firstCurrency.textContent],
          2,
        );

        secondImages.forEach((image) => {
          if (image.dataset.flag === this.dataset.currencyTitle) {
            image.classList.add('active');
          } else {
            image.classList.remove('active');
          }
        });
      });
    });

    firstInput.addEventListener('input', function (event) {
      secondInput.value = toFixed(
        (+event.target.value * rates[firstCurrency.textContent]) /
          rates[secondCurrency.textContent],
        2,
      );
    });
    secondInput.addEventListener('input', function (event) {
      firstInput.value = toFixed(
        (+event.target.value * rates[secondCurrency.textContent]) /
          rates[firstCurrency.textContent],
        2,
      );
    });
  }
  //main page what section third block

  const buttons = document.querySelectorAll('.third__button');
  const thirdBottoms = document.querySelectorAll('.third__bottom');
  const thirdImagesOne = document.querySelectorAll('.third__bottom-one .third__dropdown-pic img');
  const thirdImagesTwo = document.querySelectorAll('.third__bottom-two .third__dropdown-pic img');
  const thirdDropdownItemsOne = document.querySelectorAll(
    '.third__bottom-one .third__dropdown-abs-item',
  );
  const thirdDropdownItemsTwo = document.querySelectorAll(
    '.third__bottom-two .third__dropdown-abs-item',
  );
  const thirdDropdownTitleOne = document.querySelector('.third__bottom-one .third__dropdown-title');
  const thirdDropdownTitleTwo = document.querySelector('.third__bottom-two .third__dropdown-title');

  thirdDropdownItemsOne.forEach((button) => {
    button.addEventListener('click', function () {
      thirdDropdownTitleOne.textContent = this.dataset.title;
      thirdImagesOne.forEach((image) => {
        if (image.dataset.title === this.dataset.title) {
          image.classList.add('active');
        } else {
          image.classList.remove('active');
        }
      });
    });
  });
  thirdDropdownItemsTwo.forEach((button) => {
    button.addEventListener('click', function () {
      thirdDropdownTitleTwo.textContent = this.dataset.title;
      thirdImagesTwo.forEach((image) => {
        if (image.dataset.title === this.dataset.title) {
          image.classList.add('active');
        } else {
          image.classList.remove('active');
        }
      });
    });
  });

  buttons.forEach((button) => {
    button.addEventListener('click', () => {
      buttons.forEach((btn) => {
        if (btn === button) {
          btn.classList.add('active');
          thirdBottoms.forEach((bottom) => {
            bottom.classList.toggle('active');
          });
        } else {
          btn.classList.remove('active');
        }
      });
    });
  });
  //slick

  $('.serve__mobile').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: true,
    variableWidth: true,
    centerMode: true,
    arrows: false,
  });

  // if (window.innerWidth <= 850) {
  //   $('.what__wrapper').slick({
  //     slidesToShow: 1,
  //     slidesToScroll: 1,
  //     dots: true,
  //     variableWidth: true,
  //     centerMode: true,
  //     arrows: false,
  //     infinite: false,
  //   });
  // }

  $('.stellar-first').slick({
    vertical: true,
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: false,
    arrows: false,
    autoplay: true,
    autoplaySpeed: 3000,
    speed: 750,
    cssEase: 'ease',
    pauseOnHover: false,
    draggable: false,
    swipe: false,
    infinite: true,
    centerMode: true,
  });
  $('.stellar-second').slick({
    vertical: true,
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: false,
    arrows: false,
    speed: 750,
    cssEase: 'ease',
    pauseOnHover: false,
    draggable: false,
    swipe: false,
    infinite: true,
    centerMode: true,
  });

  $('.stellar-first').on('beforeChange', function (event, slick, currentSlide, nextSlide) {
    setTimeout(() => {
      $('.stellar-second').slick('slickNext');
    }, 200);
  });

  $('.about-values__wrapper.mobile').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: true,
    variableWidth: true,
    centerMode: true,
    arrows: false,
    infinite: false,
  });

  $('.business-how__wrapper.mobile').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: true,
    variableWidth: true,
    centerMode: true,
    arrows: false,
    infinite: false,
  });
  $('.payments-partners__wrapper.desktop').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: false,
    centerMode: true,
    arrows: true,
    infinite: false,
    variableWidth: true,
    prevArrow: $('.payments-partners__prev'),
    nextArrow: $('.payments-partners__next'),
    responsive: [
      {
        breakpoint: 850,
        settings: {
          arrows: false,
          dots: true,
        },
      },
    ],
  });
  let paymentsCurrentPage = document.querySelector('.payments-partners__current-page');
  $('.payments-partners__wrapper.desktop').on('afterChange', function (event, slick, currentSlide) {
    paymentsCurrentPage.innerHTML = currentSlide + 1;
  });

  $('.payments-partners__wrapper.mobile').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    centerMode: true,
    arrows: false,
    dots: true,
    infinite: false,
    variableWidth: true,
  });

  $('.payments-countries__list.mobile').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: true,
    arrows: false,
    infinite: false,
    centerMode: true,
  });
  // $('.payments-any__list.mobile').slick({
  //   slidesToShow: 1,
  //   slidesToScroll: 1,
  //   dots: true,
  //   arrows: false,
  //   infinite: false,
  //   centerMode: true,
  // });
  $('.payments-transfer__wrapper.mobile').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: true,
    variableWidth: true,
    centerMode: true,
    arrows: false,
    infinite: false,
  });
  $('.onboard-one__wrapper.mobile').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: true,
    variableWidth: true,
    centerMode: true,
    arrows: false,
    infinite: false,
  });
  $('.onboard-two__wrapper.mobile').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    dots: true,
    variableWidth: true,
    centerMode: true,
    arrows: false,
    infinite: false,
  });

  //wow animation

  new WOW().init();

  //check if is mobile

  isMobile = {
    Android: function () {
      return navigator.userAgent.match(/Android/i);
    },
    BlackBerry: function () {
      return navigator.userAgent.match(/BlackBerry/i);
    },
    iOS: function () {
      return navigator.userAgent.match(/iPhone|iPad|iPod/i);
    },
    Opera: function () {
      return navigator.userAgent.match(/Opera Mini/i);
    },
    Windows: function () {
      return navigator.userAgent.match(/IEMobile/i);
    },
    any: function () {
      return (
        isMobile.Android() ||
        isMobile.BlackBerry() ||
        isMobile.iOS() ||
        isMobile.Opera() ||
        isMobile.Windows()
      );
    },
  };

  let burger = document.querySelector('.header__burger');
  let body = document.querySelector('.body');
  if (burger) {
    burger.addEventListener('click', () => {
      header.classList.toggle('active-burger');
      body.classList.toggle('overflow');
    });
  }

  // mask global section

  gsap.to('.global__bg', {
    scale: 1.3,
    scrollTrigger: {
      trigger: '.global',
      start: 'top 0%',
      end: 'bottom 100%',
      toggleActions: 'play pause resume none',
      scrub: true,
    },
  });

  if (!isMobile.any()) {
    gsap.to('.global__mask', {
      webkitMaskSize: `186%`,
      ease: 'ease-in-out',
      scrollTrigger: {
        trigger: '.global',
        start: 'top 0%',
        end: 'bottom 100%',
        toggleActions: 'play pause resume none',
        scrub: true,
      },
    });
  } else {
    let sizePercent = 186; // начальное значение переменной one
    let standardAspectRatio = 16 / 9; // стандартное соотношение сторон 16:9
    let currentAspectRatio = window.innerWidth / window.innerHeight; // текущее соотношение сторон
    let aspectRatioDifference = currentAspectRatio - standardAspectRatio; // разница в соотношении сторон
    let increment = Math.floor(150 * -aspectRatioDifference); // количество увеличений переменной one
    sizePercent += increment; // увеличение переменной one

    gsap.to('.global__mask', {
      webkitMaskSize: `${sizePercent}%`,
      scrollTrigger: {
        trigger: '.global',
        start: 'top 0%',
        end: 'bottom 100%',
        toggleActions: 'play pause resume none',
        scrub: true,
      },
    });
  }

  // solution block animation

  if (!isMobile.any()) {
    gsap.to('.first__pic .parallax', {
      yPercent: 15,
      scrollTrigger: {
        trigger: '.first__pic .parallax',
        toggleActions: 'play pause resume none',
        scrub: true,
      },
    });
    gsap.to('.second__pic .parallax', {
      yPercent: -15,
      scrollTrigger: {
        trigger: '.second__pic .parallax',
        toggleActions: 'play pause resume none',
        scrub: true,
      },
    });
  }

  gsap.from('.third__abs', {
    yPercent: 15,
    scrollTrigger: {
      trigger: '.solution__item.third',
      toggleActions: 'play pause resume none',
      scrub: true,
    },
  });

  //footer animation

  // gsap.from('.footer', {
  //   yPercent: -200,
  //   ease: 'ease-in',
  //   scrollTrigger: {
  //     trigger: '.footer',
  //     start: 'top 100%',
  //     end: 'bottom 0%',
  //     toggleActions: 'play pause resume none',
  //     scrub: true,
  //   },
  // });
  // gsap.from('.footer .wrapper', {
  //   yPercent: -50,
  //   ease: 'ease-in',
  //   scrollTrigger: {
  //     trigger: '.footer',
  //     start: 'top 100%',
  //     end: 'top 50%',
  //     toggleActions: 'play pause resume none',
  //     scrub: true,
  //   },
  // });

  //accordions

  function createAccordion(accordionContainerSelector, animationSpeed, closeOthers) {
    let accordionHeaders = document.querySelectorAll(
      `.${accordionContainerSelector} .accordion-header`,
    );

    accordionHeaders.forEach(function (header) {
      header.addEventListener('click', function () {
        let accordionItem = this.parentElement;
        let accordionContent = accordionItem.querySelector('.accordion-content');

        if (closeOthers) {
          closeAllAccordionItems(accordionHeaders, accordionItem);
        }

        if (accordionContent.style.maxHeight) {
          accordionContent.style.maxHeight = null;
          accordionItem.classList.remove('active');
        } else {
          accordionContent.style.transitionDuration = animationSpeed + 's';
          accordionContent.style.maxHeight = accordionContent.scrollHeight + 'px';
          accordionItem.classList.add('active');
        }
      });
    });

    function closeAllAccordionItems(headers, currentItem) {
      headers.forEach(function (header) {
        let accordionItem = header.parentElement;
        let accordionContent = accordionItem.querySelector('.accordion-content');

        if (accordionItem !== currentItem && accordionContent.style.maxHeight) {
          accordionContent.style.maxHeight = null;
          accordionItem.classList.remove('active');
        }
      });
    }
  }

  createAccordion('accordion', 0.3, false);
  // createAccordion('payments-types__accordion', 0.3, true);
  createAccordion('payments-partners__wrapper', 0.3, false);
  createAccordion('payments-any__list', 0.3, false);
  //popup input logic
  function toggleElements(element) {
    let images = element.querySelectorAll('img');
    images.forEach(function (img) {
      img.classList.toggle('active');
    });

    let input = element.querySelector('input');
    if (input.type === 'password') {
      input.type = 'text';
    } else {
      input.type = 'password';
    }
  }

  let popupIcons = document.querySelectorAll('.popup__input-abs');
  popupIcons.forEach(function (icon) {
    icon.addEventListener('click', function () {
      toggleElements(this.parentElement);
    });
  });

  //popup close logic

  let signUpButton = document.querySelector('.signup');
  let signInButton = document.querySelector('.signin');

  if (signUpButton) {
    signUpButton.addEventListener('click', function (event) {
      let closeButton = document.querySelector('.carousel__button');
      closeButton.click();
    });
  }

  if (signInButton) {
    signInButton.addEventListener('click', function (event) {
      let closeButton = document.querySelector('.carousel__button');
      closeButton.click();
    });
  }

  // loader
  setTimeout(function () {
    document.querySelector('body').classList.remove('loaded');
  }, 400);

  // lazy load
  // setTimeout(function () {
  // 	$(".js-bg").each(function () {
  // 		$(this).css('background-image', 'url(' + $(this).data("bg") + ')');
  // 	});
  // 	$(".js-img").each(function () {
  // 		$(this).attr('src', $(this).data("src"));
  // 	});
  // }, 200);

  /* components */

  /*
	if($('.styled').length) {
		$('.styled').styler();
	};
	if($('.fancybox').length) {
		$('.fancybox').fancybox({
			margin  : 10,
			padding  : 10
		});
	};
	if($('.slick-slider').length) {
		$('.slick-slider').slick({
			dots: true,
			infinite: false,
			speed: 300,
			slidesToShow: 4,
			slidesToScroll: 4,
			responsive: [
				{
				  breakpoint: 1024,
				  settings: {
					slidesToShow: 3,
					slidesToScroll: 3,
					infinite: true,
					dots: true
				  }
				},
				{
				  breakpoint: 600,
				  settings: "unslick"
				}				
			]
		});
	};
	if($('.scroll').length) {
		$(".scroll").mCustomScrollbar({
			axis:"x",
			theme:"dark-thin",
			autoExpandScrollbar:true,
			advanced:{autoExpandHorizontalScroll:true}
		});
	};
	*/

  /* components */

  //prevent drag img and a
  const imagesAndLinks = document.querySelectorAll('img, a');
  if (imagesAndLinks) {
    imagesAndLinks.forEach(function (item, i, arr) {
      item.addEventListener('dragstart', function (e) {
        e.preventDefault();
      });
    });
  }

  const handlerResize = function () {
    let viewport_wid = viewport().width;
    let viewport_height = viewport().height;

    // if (viewport_wid <= 991) {

    // }
  };

  window.addEventListener('load', handlerResize);
  window.addEventListener('resize', handlerResize);
});

/* viewport width */
function viewport() {
  let e = window,
    a = 'inner';
  if (!('innerWidth' in window)) {
    a = 'client';
    e = document.documentElement || document.body;
  }
  return { width: e[a + 'Width'], height: e[a + 'Height'] };
}
/* viewport width */

window.addEventListener('scroll', function () {
  let scrollPosition = window.pageYOffset || window.scrollY;

  let container = document.querySelector('.global');
  let firstTitle = document.querySelector('.global__title.first');
  let secondTitle = document.querySelector('.global__title.second');

  let percent = Math.round(
    (scrollPosition - container.offsetTop + window.innerHeight) / (container.offsetHeight / 100),
  );

  if (percent > 60) {
    firstTitle.classList.remove('active');
    secondTitle.classList.add('active');
  } else {
    firstTitle.classList.add('active');
    secondTitle.classList.remove('active');
  }
});
